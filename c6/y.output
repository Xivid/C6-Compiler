Terminals unused in grammar

   ARRAY


Grammar

    0 $accept: program $end

    1 program: function

    2 definition: VARIABLE '(' params ')' '{' stmt_list return '}'
    3           | VARIABLE '(' ')' '{' stmt_list return '}'

    4 params: params ',' VARIABLE
    5       | VARIABLE

    6 return: RETURN VARIABLE ';'

    7 function: function stmt
    8         | function definition
    9         | %empty

   10 stmt: ';'
   11     | expr ';'
   12     | BREAK ';'
   13     | CONTINUE ';'
   14     | PRINT expr ';'
   15     | READ VARIABLE ';'
   16     | VARIABLE '=' expr ';'
   17     | FOR '(' stmt stmt stmt ')' stmt
   18     | WHILE '(' expr ')' stmt
   19     | DO stmt WHILE '(' expr ')'
   20     | IF '(' expr ')' stmt
   21     | IF '(' expr ')' stmt ELSE stmt
   22     | '{' stmt_list '}'

   23 stmt_list: stmt
   24          | stmt_list stmt

   25 expr: INTEGER
   26     | VARIABLE
   27     | '-' expr
   28     | expr '+' expr
   29     | expr '-' expr
   30     | expr '*' expr
   31     | expr '%' expr
   32     | expr '/' expr
   33     | expr '<' expr
   34     | expr '>' expr
   35     | expr GE expr
   36     | expr LE expr
   37     | expr NE expr
   38     | expr EQ expr
   39     | expr AND expr
   40     | expr OR expr
   41     | '(' expr ')'
   42     | VARIABLE '(' params ')'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 31
'(' (40) 2 3 17 18 19 20 21 41 42
')' (41) 2 3 17 18 19 20 21 41 42
'*' (42) 30
'+' (43) 28
',' (44) 4
'-' (45) 27 29
'/' (47) 32
';' (59) 6 10 11 12 13 14 15 16
'<' (60) 33
'=' (61) 16
'>' (62) 34
'{' (123) 2 3 22
'}' (125) 2 3 22
error (256)
INTEGER (258) 25
VARIABLE (259) 2 3 4 5 6 15 16 26 42
FOR (260) 17
WHILE (261) 18 19
IF (262) 20 21
PRINT (263) 14
READ (264) 15
DO (265) 19
BREAK (266) 12
CONTINUE (267) 13
ARRAY (268)
RETURN (269) 6
IFX (270)
ELSE (271) 21
AND (272) 39
OR (273) 40
GE (274) 35
LE (275) 36
EQ (276) 38
NE (277) 37
UMINUS (278)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
definition (40)
    on left: 2 3, on right: 8
params (41)
    on left: 4 5, on right: 2 4 42
return (42)
    on left: 6, on right: 2 3
function (43)
    on left: 7 8 9, on right: 1 7 8
stmt (44)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22, on right: 7 17
    18 19 20 21 23 24
stmt_list (45)
    on left: 23 24, on right: 2 3 22 24
expr (46)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42,
    on right: 11 14 16 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37
    38 39 40 41


State 0

    0 $accept: . program $end

    $default  reduce using rule 9 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    7 function: function . stmt
    8         | function . definition

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    $default  reduce using rule 1 (program)

    definition  go to state 18
    stmt        go to state 19
    expr        go to state 20


State 3

    0 $accept: program $end .

    $default  accept


State 4

   25 expr: INTEGER .

    $default  reduce using rule 25 (expr)


State 5

    2 definition: VARIABLE . '(' params ')' '{' stmt_list return '}'
    3           | VARIABLE . '(' ')' '{' stmt_list return '}'
   16 stmt: VARIABLE . '=' expr ';'
   26 expr: VARIABLE .
   42     | VARIABLE . '(' params ')'

    '('  shift, and go to state 21
    '='  shift, and go to state 22

    $default  reduce using rule 26 (expr)


State 6

   17 stmt: FOR . '(' stmt stmt stmt ')' stmt

    '('  shift, and go to state 23


State 7

   18 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 24


State 8

   20 stmt: IF . '(' expr ')' stmt
   21     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 25


State 9

   14 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 27


State 10

   15 stmt: READ . VARIABLE ';'

    VARIABLE  shift, and go to state 28


State 11

   19 stmt: DO . stmt WHILE '(' expr ')'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt  go to state 30
    expr  go to state 20


State 12

   12 stmt: BREAK . ';'

    ';'  shift, and go to state 31


State 13

   13 stmt: CONTINUE . ';'

    ';'  shift, and go to state 32


State 14

   27 expr: '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 33


State 15

   41 expr: '(' . expr ')'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 34


State 16

   22 stmt: '{' . stmt_list '}'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt       go to state 35
    stmt_list  go to state 36
    expr       go to state 20


State 17

   10 stmt: ';' .

    $default  reduce using rule 10 (stmt)


State 18

    8 function: function definition .

    $default  reduce using rule 8 (function)


State 19

    7 function: function stmt .

    $default  reduce using rule 7 (function)


State 20

   11 stmt: expr . ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    AND  shift, and go to state 37
    OR   shift, and go to state 38
    GE   shift, and go to state 39
    LE   shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    '>'  shift, and go to state 43
    '<'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    ';'  shift, and go to state 50


State 21

    2 definition: VARIABLE '(' . params ')' '{' stmt_list return '}'
    3           | VARIABLE '(' . ')' '{' stmt_list return '}'
   42 expr: VARIABLE '(' . params ')'

    VARIABLE  shift, and go to state 51
    ')'       shift, and go to state 52

    params  go to state 53


State 22

   16 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 54


State 23

   17 stmt: FOR '(' . stmt stmt stmt ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt  go to state 55
    expr  go to state 20


State 24

   18 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 56


State 25

   20 stmt: IF '(' . expr ')' stmt
   21     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 57


State 26

   26 expr: VARIABLE .
   42     | VARIABLE . '(' params ')'

    '('  shift, and go to state 58

    $default  reduce using rule 26 (expr)


State 27

   14 stmt: PRINT expr . ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    AND  shift, and go to state 37
    OR   shift, and go to state 38
    GE   shift, and go to state 39
    LE   shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    '>'  shift, and go to state 43
    '<'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    ';'  shift, and go to state 59


State 28

   15 stmt: READ VARIABLE . ';'

    ';'  shift, and go to state 60


State 29

   16 stmt: VARIABLE . '=' expr ';'
   26 expr: VARIABLE .
   42     | VARIABLE . '(' params ')'

    '('  shift, and go to state 58
    '='  shift, and go to state 22

    $default  reduce using rule 26 (expr)


State 30

   19 stmt: DO stmt . WHILE '(' expr ')'

    WHILE  shift, and go to state 61


State 31

   12 stmt: BREAK ';' .

    $default  reduce using rule 12 (stmt)


State 32

   13 stmt: CONTINUE ';' .

    $default  reduce using rule 13 (stmt)


State 33

   27 expr: '-' expr .
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    $default  reduce using rule 27 (expr)


State 34

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | '(' expr . ')'

    AND  shift, and go to state 37
    OR   shift, and go to state 38
    GE   shift, and go to state 39
    LE   shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    '>'  shift, and go to state 43
    '<'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    ')'  shift, and go to state 62


State 35

   23 stmt_list: stmt .

    $default  reduce using rule 23 (stmt_list)


State 36

   22 stmt: '{' stmt_list . '}'
   24 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    '}'       shift, and go to state 63
    ';'       shift, and go to state 17

    stmt  go to state 64
    expr  go to state 20


State 37

   39 expr: expr AND . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 65


State 38

   40 expr: expr OR . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 66


State 39

   35 expr: expr GE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 67


State 40

   36 expr: expr LE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 68


State 41

   38 expr: expr EQ . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 69


State 42

   37 expr: expr NE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 70


State 43

   34 expr: expr '>' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 71


State 44

   33 expr: expr '<' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 72


State 45

   28 expr: expr '+' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 73


State 46

   29 expr: expr '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 74


State 47

   30 expr: expr '*' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 75


State 48

   32 expr: expr '/' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 76


State 49

   31 expr: expr '%' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 77


State 50

   11 stmt: expr ';' .

    $default  reduce using rule 11 (stmt)


State 51

    5 params: VARIABLE .

    $default  reduce using rule 5 (params)


State 52

    3 definition: VARIABLE '(' ')' . '{' stmt_list return '}'

    '{'  shift, and go to state 78


State 53

    2 definition: VARIABLE '(' params . ')' '{' stmt_list return '}'
    4 params: params . ',' VARIABLE
   42 expr: VARIABLE '(' params . ')'

    ')'  shift, and go to state 79
    ','  shift, and go to state 80


State 54

   16 stmt: VARIABLE '=' expr . ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    AND  shift, and go to state 37
    OR   shift, and go to state 38
    GE   shift, and go to state 39
    LE   shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    '>'  shift, and go to state 43
    '<'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    ';'  shift, and go to state 81


State 55

   17 stmt: FOR '(' stmt . stmt stmt ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt  go to state 82
    expr  go to state 20


State 56

   18 stmt: WHILE '(' expr . ')' stmt
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    AND  shift, and go to state 37
    OR   shift, and go to state 38
    GE   shift, and go to state 39
    LE   shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    '>'  shift, and go to state 43
    '<'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    ')'  shift, and go to state 83


State 57

   20 stmt: IF '(' expr . ')' stmt
   21     | IF '(' expr . ')' stmt ELSE stmt
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    AND  shift, and go to state 37
    OR   shift, and go to state 38
    GE   shift, and go to state 39
    LE   shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    '>'  shift, and go to state 43
    '<'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    ')'  shift, and go to state 84


State 58

   42 expr: VARIABLE '(' . params ')'

    VARIABLE  shift, and go to state 51

    params  go to state 85


State 59

   14 stmt: PRINT expr ';' .

    $default  reduce using rule 14 (stmt)


State 60

   15 stmt: READ VARIABLE ';' .

    $default  reduce using rule 15 (stmt)


State 61

   19 stmt: DO stmt WHILE . '(' expr ')'

    '('  shift, and go to state 86


State 62

   41 expr: '(' expr ')' .

    $default  reduce using rule 41 (expr)


State 63

   22 stmt: '{' stmt_list '}' .

    $default  reduce using rule 22 (stmt)


State 64

   24 stmt_list: stmt_list stmt .

    $default  reduce using rule 24 (stmt_list)


State 65

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   39     | expr AND expr .
   40     | expr . OR expr

    GE   shift, and go to state 39
    LE   shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    '>'  shift, and go to state 43
    '<'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 39 (expr)


State 66

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr
   40     | expr OR expr .

    GE   shift, and go to state 39
    LE   shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    '>'  shift, and go to state 43
    '<'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 40 (expr)


State 67

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   35     | expr GE expr .
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 35 (expr)


State 68

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   36     | expr LE expr .
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 36 (expr)


State 69

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   38     | expr EQ expr .
   39     | expr . AND expr
   40     | expr . OR expr

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 38 (expr)


State 70

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   37     | expr NE expr .
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 37 (expr)


State 71

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   34     | expr '>' expr .
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 34 (expr)


State 72

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   33     | expr '<' expr .
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 33 (expr)


State 73

   28 expr: expr . '+' expr
   28     | expr '+' expr .
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 28 (expr)


State 74

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   29     | expr '-' expr .
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49

    $default  reduce using rule 29 (expr)


State 75

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   30     | expr '*' expr .
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    $default  reduce using rule 30 (expr)


State 76

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   32     | expr '/' expr .
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    $default  reduce using rule 32 (expr)


State 77

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   31     | expr '%' expr .
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    $default  reduce using rule 31 (expr)


State 78

    3 definition: VARIABLE '(' ')' '{' . stmt_list return '}'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt       go to state 35
    stmt_list  go to state 87
    expr       go to state 20


State 79

    2 definition: VARIABLE '(' params ')' . '{' stmt_list return '}'
   42 expr: VARIABLE '(' params ')' .

    '{'  shift, and go to state 88

    $default  reduce using rule 42 (expr)


State 80

    4 params: params ',' . VARIABLE

    VARIABLE  shift, and go to state 89


State 81

   16 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 16 (stmt)


State 82

   17 stmt: FOR '(' stmt stmt . stmt ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt  go to state 90
    expr  go to state 20


State 83

   18 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt  go to state 91
    expr  go to state 20


State 84

   20 stmt: IF '(' expr ')' . stmt
   21     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt  go to state 92
    expr  go to state 20


State 85

    4 params: params . ',' VARIABLE
   42 expr: VARIABLE '(' params . ')'

    ')'  shift, and go to state 93
    ','  shift, and go to state 80


State 86

   19 stmt: DO stmt WHILE '(' . expr ')'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 26
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 94


State 87

    3 definition: VARIABLE '(' ')' '{' stmt_list . return '}'
   24 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    RETURN    shift, and go to state 95
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    return  go to state 96
    stmt    go to state 64
    expr    go to state 20


State 88

    2 definition: VARIABLE '(' params ')' '{' . stmt_list return '}'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt       go to state 35
    stmt_list  go to state 97
    expr       go to state 20


State 89

    4 params: params ',' VARIABLE .

    $default  reduce using rule 4 (params)


State 90

   17 stmt: FOR '(' stmt stmt stmt . ')' stmt

    ')'  shift, and go to state 98


State 91

   18 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 18 (stmt)


State 92

   20 stmt: IF '(' expr ')' stmt .
   21     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 99

    $default  reduce using rule 20 (stmt)


State 93

   42 expr: VARIABLE '(' params ')' .

    $default  reduce using rule 42 (expr)


State 94

   19 stmt: DO stmt WHILE '(' expr . ')'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '%' expr
   32     | expr . '/' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . AND expr
   40     | expr . OR expr

    AND  shift, and go to state 37
    OR   shift, and go to state 38
    GE   shift, and go to state 39
    LE   shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    '>'  shift, and go to state 43
    '<'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    ')'  shift, and go to state 100


State 95

    6 return: RETURN . VARIABLE ';'

    VARIABLE  shift, and go to state 101


State 96

    3 definition: VARIABLE '(' ')' '{' stmt_list return . '}'

    '}'  shift, and go to state 102


State 97

    2 definition: VARIABLE '(' params ')' '{' stmt_list . return '}'
   24 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    RETURN    shift, and go to state 95
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    return  go to state 103
    stmt    go to state 64
    expr    go to state 20


State 98

   17 stmt: FOR '(' stmt stmt stmt ')' . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt  go to state 104
    expr  go to state 20


State 99

   21 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    FOR       shift, and go to state 6
    WHILE     shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    READ      shift, and go to state 10
    DO        shift, and go to state 11
    BREAK     shift, and go to state 12
    CONTINUE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    ';'       shift, and go to state 17

    stmt  go to state 105
    expr  go to state 20


State 100

   19 stmt: DO stmt WHILE '(' expr ')' .

    $default  reduce using rule 19 (stmt)


State 101

    6 return: RETURN VARIABLE . ';'

    ';'  shift, and go to state 106


State 102

    3 definition: VARIABLE '(' ')' '{' stmt_list return '}' .

    $default  reduce using rule 3 (definition)


State 103

    2 definition: VARIABLE '(' params ')' '{' stmt_list return . '}'

    '}'  shift, and go to state 107


State 104

   17 stmt: FOR '(' stmt stmt stmt ')' stmt .

    $default  reduce using rule 17 (stmt)


State 105

   21 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 21 (stmt)


State 106

    6 return: RETURN VARIABLE ';' .

    $default  reduce using rule 6 (return)


State 107

    2 definition: VARIABLE '(' params ')' '{' stmt_list return '}' .

    $default  reduce using rule 2 (definition)
